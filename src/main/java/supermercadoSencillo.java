import java.time.temporal.ChronoUnit;
import java.util.*;
import misUtilidades.*;
import java.time.*;


public class supermercadoSencillo {

    // Almacenar en variables la informaci├│n de un producto
        /*
        - IDProducto
        - nombreProducto
        - precioUnitarioProducto
        - cantidadBodegaProducto
        - caducidadProducto
        - fechaVencimientoProducto
        - fotografiaUnoProducto
        - fotografiaDosProducto
        - descripcionProducto
        - categoriaProducto
        - nombreProvedorProducto
        */

    // Si el Producto se vence y han pasado m├Аs de 3 d├Гas desde la fecha de vencimiento РюЁ

    // Se debe restar la unidad vencida a la cantidad de bodega РюЁ

    // Se debe permitir registrar N productos en una BD simulada en JAVA РюЁ

    // Se debe permitir modificar el precioUnitarioProducto de cualquier producto ingresado previamente РюЁ

    // Se debe permitir eliminar un producto de la bodega РюЁ

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        UUID idAleatorio = UUID.randomUUID();

        System.out.println(
                """
                         РќёРќѕРќђРќђРќђРќёРќѕ                                                                                   РќђРќѕРќѕ            \s
                         РќѕРќѕРќёРќё  Рќђ  РќёРќёРќё РќёРќёРќё  РќёРќёРќё РќёРќёРќё    РќёРќёРќёРќё  РќёРќёРќё РќёРќё  РќёРќё РќёРќё РќёРќё     РќёРќёРќёРќё  РќёРќёРќё РќёРќё    РќёРќёРќёРќё   РќёРќёРќёРќё     РќёРќё РќѕРќѕ    РќёРќёРќё     \s
                          РќђРќђРќѕРќѕРќѕРќё   РќѕРќѕ  РќѕРќѕ   РќѕРќѕРќђ  РќѕРќѕ РќёРќѕРќёРќёРќёРќѕРќѕ  РќѕРќѕРќђ РќђРќђ  РќѕРќѕ РќѕРќѕ РќѕРќѕ  РќёРќѕРќёРќёРќёРќѕРќѕ  РќѕРќѕРќђ РќђРќђ РќёРќѕ   РќђРќђ РќђРќђ РќёРќѕРќѕ  РќёРќђ  РќђРќѕРќѕ  РќёРќѕ  РќђРќѕРќё   \s
                        Рќё     РќђРќѕРќѕ  РќѕРќѕ  РќѕРќѕ   РќѕРќѕ    Рќѕ РќѕРќѕ       РќѕРќѕ      РќѕРќѕ РќѕРќѕ РќѕРќѕ  РќѕРќѕ       РќѕРќѕ     РќѕРќѕ      РќёРќѕРќђ РќѕРќѕ  РќѕРќё   РќѕРќѕ  РќѕРќѕ   РќѕРќѕ   \s
                        РќѕРќђРќёРќёРќёРќёРќѕРќђ   РќђРќѕРќёРќёРќђРќѕРќё  РќѕРќѕРќёРќёРќёРќђ   РќђРќѕРќёРќёРќёРќђ РќёРќѕРќѕРќё    РќёРќѕРќѕ РќѕРќѕ РќѕРќѕРќё  РќђРќѕРќёРќёРќёРќђ РќёРќѕРќѕРќё     РќђРќѕРќёРќёРќёРќђ РќђРќѕРќёРќёРќђРќѕРќђ РќђРќѕРќёРќёРќђРќѕРќѕРќё  РќђРќѕРќёРќёРќѕРќђ   \s
                                            РќѕРќѕ                                                                                    \s
                                           РќђРќђРќђРќђ                                                                                   \s
                        """);

        System.out.println("""
                РќђРќѕРќѕРќђ                 РќђРќѕРќѕРќђ  РќђРќѕРќђ                            РќѕРќѕ    Рќё          \s
                 РќѕРќѕ        РќёРќёРќёРќё       РќђРќѕРќё  РќёРќђ   РќёРќёРќёРќё     РќёРќёРќё Рќё  РќёРќёРќё РќёРќёРќё  РќёРќёРќё  РќёРќѕРќѕРќё   РќёРќёРќёРќё  \s
                 РќѕРќѕ       РќђРќђ РќёРќѕРќѕ       РќѕРќѕ  Рќѕ   РќђРќђ РќёРќѕРќѕ  РќёРќђ   РќѕРќѕ   РќѕРќѕ  РќѕРќѕ   РќѕРќѕ   РќѕРќѕ   РќђРќђ РќёРќѕРќѕ \s
                 РќѕРќѕ       РќёРќѕРќђ РќѕРќѕ        РќѕРќѕРќѕ    РќёРќѕРќђ РќѕРќѕ  РќѕРќё   РќѕРќѕ   РќѕРќѕ  РќѕРќѕ   РќѕРќѕ   РќѕРќѕ   РќёРќѕРќђ РќѕРќѕ \s
                РќёРќѕРќѕРќёРќёРќёРќёРќёРќѕ РќђРќѕРќёРќёРќђРќѕРќђ        Рќѕ     РќђРќѕРќёРќёРќђРќѕРќђ РќђРќѕРќёРќёРќђРќѕРќѕ   РќђРќѕРќёРќёРќђРќѕРќё РќёРќѕРќѕРќё  РќђРќѕРќёРќђ РќђРќѕРќёРќёРќђРќѕРќђ\s
                                                            РќѕРќѕ                             \s
                                                           РќђРќђРќђРќђ                            \s
                """);

        System.out.println(
                """
                        РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбђРБаРБЙРАЪРаиРбдРАёРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбаРАХРбХРАдРБёРАђРађРађРађРбђРБцРаъРа╗РаЏРаЃРађРаѕРаЏРбдРАђРађРађРађРађРађРбђРБђРБђРАђ
                        РађРађРађРађРађРађРађРађРађРађРБђРБђРБђРАђРађРађРађРађРађРађРађРбИРађРађРаЅРањРагРбЇРАЅРаЅРБ╣РаЃРађРађРађРађРађРађРађРађРб╣РањРбХРБХРАЙРаЏРаЏРаЂРађРаЎ
                        РађРађРађРађРађРађРађРбђРБаРаЙРаІРаЅРаЅРаЅРаЏРа▓РацРбцРБђРБђРБђРАўРБДРАђРађРађРађРађРаѕРБ╣РаЂРађРађРађРађРађРађРађРбђРађРаИРАдРаіРаЂРађРађРађРађРбёРА╝
                        РађРађРађРбђРБђРАцРаХРа┐РаЁРађРбђРађРаћРаіРађРађРађРађРађРађРаѕРаЅРаЎРаЏРа«РБёРБђРБаРБ╝РБДРАёРађРађРађРаєРађРађРБцРБ╝Ра▓РБёРбђРАђРбђРБђРБцРБцРа┤РаІРађ
                        РађРађРбђРАЪРаЂРађРађРађРађРађРађРађРАђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбўРБДРађРађРађРађРађРађРаЅРађРб░РаЃРаѕРаЅРаЅРаЅРаЂРађРађРађРађ
                        РађРађРБИРаЂРађРађРА░РаЂРађРађРађРаіРађРађРађРађРађРађРађРађРађРађРађРА┤РађРађРађРађРађРБИРаЃРађРађРађРађРађРаЂРађРађРБ╝РађРађРађРађРађРађРађРађРађРађ
                        РађРб░РБ┐РађРађРБ░РаЃРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбђРаъРађРађРађРађРађРБ░РАЃРађРађРађРађРађРађРађРбђРБ┤РАЄРађРађРађРађРађРађРађРађРађРађ
                        РбаРаЄРБ┐РађРбаРАЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбаРајРађРађРађРађРађРађРб┐Рб╗РАЇРбаРАёРађРађРбаРБаРајРБ╝РаЃРађРађРађРађРађРађРађРађРађРађ
                        РАИРб░РАЈРађРбИРађРађРађРађРађРађРађРађРађРађРађРађРађРађРбђРАЈРађРађРађРађРађРађРађРаѕРа╗РБЌРБџРБ┐РБ┤РБ║РаЪРбЂРА╝РАЪРађРађРађРађРађРађРађРађРађРађРађ
                        РБЄРБИРАЄРађРаИРБєРађРађРађРађРађРађРађРађРађРађРађРађРађРБ╝РађРађРађРбђРАћРађРађРађРађРађРађРаЅРаЅРаЅРађРбђРАъРаЂРАЄРађРађРађРађРађРађРађРађРађРађРађ
                        РБЄРбИРАЄРађРађРб┐РАёРађРађРађРађРађРађРађРађРађРађРађРбаРаЄРађРађРађРаЈРађРађРађРађРађРађРађРађРађРађРАаРаіРађРађРБиРађРађРађРађРађРађРађРађРађРађРађ
                        Рб╣РБИРАЄРађРађРаўРБиРАђРађРађРађРађРађРађРађРађРађРађРбИРађРађРађРађРађРађРађРађРађРађРађРађРађРбђРаъРаЂРађРађРађРАЪРађРађРађРађРађРађРађРађРађРађРађ
                        РаѕРАЈРбиРађРађРађРаўРБиРађРађРађРађРађРађРађРађРађРађРбИРАђРађРађРађРађРађРађРађРађРађРађРађРађРаЃРађРађРађРађРБ╝РаЂРађРађРађРађРађРађРађРађРађРађРађ
                        РађРаўРБ╝РАђРађРађРађРБ╝РбиРБёРађРађРађРађРађРађРађРађРаѕРБДРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБИРаЃРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРб╗РАЄРађРађРбаРб┐РађРаЅРаЏРбиРаХРацРбцРБёРБђРБђРБђРБ╣Ра░РађРађРађРађРБаРаёРађРађРађРађРађРБђРАђРађРбаРаЄРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРбИРаЂРађРађРАЈРбИРађРађРађРА┐РађРађРађРађРађРађРаѕРаЎРАЄРађРађРађРб░РБЄРађРађРађРбђРАаРбЙРаЅРађРађРБИРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРб║РађРађРбИРаЄРбИРађРађРБ╝РаЃРађРађРађРађРађРађРађРађРб╗РАђРађРађРађРАЈРаЊРадРа┤РаІРаЂРбИРађРађРађРАЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРбИРАёРађРАЙРађРАъРађРб░РаЃРађРађРађРађРађРађРађРађРађРађРБЄРађРађРађРАЄРађРађРађРађРађРБ╝РађРађРађРАЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРаўРаЃРбђРАЄРб░РаЂРађРАЈРађРађРађРађРађРађРађРађРађРађРађРбИРађРађРб░РаЃРађРађРађРађРађРб╗РађРађРб░РаЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРбђРАђРаѕРБЄРАИРађРађРАЄРађРађРађРађРађРађРађРађРађРађРађРбИРађРађРбИРађРађРађРађРађРађРбИРАђРађРАюРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРБ╝РађРађРбИРАЄРађРааРБДРађРађРађРађРађРађРађРађРађРађРађРб╗РађРађРбИРађРађРађРађРађРађРбИРађРађРАЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРб░РАЪРађРађРаџРАДРБёРБђРБИРађРађРађРађРађРађРађРађРађРађРађРаИРАєРађРБ╝РађРађРађРађРађРађРБИРађРађРБЄРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРа╗РацРацРаќРаЃРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРАЄРађРб╣РАђРађРађРађРађРађРб╣РАђРађРаИРАёРађРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРб░РаЃРађРаѕРБЄРађРађРађРађРађРађРБДРАђРаљРа╗РАёРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРАъРањРађРаљРа╗РАёРађРађРађРађРађРаЎРањРањРаіРаЅРађРађРађРађРађРађРађРађРађРађРађРађРађ
                        РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРа│РБцРБаРацРа┤РаЃРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ""");


        System.out.println( ColoresConsola.TEXTO_MAGENTA + "\n\uD835\uDCAB\uD835\uDCC7Рё»\uD835\uDCC8\uD835\uDCBEРё┤\uD835\uDCC3Рё» Рё»\uD835\uDCC3\uD835\uDCC9Рё»\uD835\uDCC7 \uD835\uDCC5\uD835\uDCB6\uD835\uDCC7\uD835\uDCB6 \uD835\uDCB8Рё┤\uD835\uDCC3\uD835\uDCC9\uD835\uDCBE\uD835\uDCC3\uD835\uDCCA\uD835\uDCB6\uD835\uDCC7");
        scanner.nextLine();

        // VARIABLES

        // Men├║
        byte opcionUsuario;
        boolean banderaOpciones = false;

        // HashMaps De Productos
        HashMap<String, HashMap<String, Object>> DiccionarioProductos = new HashMap<>();

        while (true) {
            // El Texto de abajo dice "Menu de productos"
            System.out.println(ColoresConsola.TEXTO_AMARILLO + "\n\uD835\uDE48\uD835\uDE5A\uD835\uDE63\uD835\uDE6A \uD835\uDE3F\uD835\uDE5A \uD835\uDE4B\uD835\uDE67\uD835\uDE64\uD835\uDE59\uD835\uDE6A\uD835\uDE58\uD835\uDE69\uD835\uDE64\uD835\uDE68 ­ЪЏњ");
            System.out.println("РЮЌ Ingresa el n├║mero de la opci├│n que deseas selecionar РЮЌ" + ColoresConsola.TEXTO_ROJO + "[1-2-3-4-5-6]\n" + ColoresConsola.TEXTO_CIAN);
            System.out.println("­Ъћи 1№ИЈРЃБ AGREGAR PRODUCTO РъЋ");
            System.out.println("­Ъћи 2№ИЈРЃБ MOSTRAR PRODUCTO ­ЪЉђ");
            System.out.println("­Ъћи 3№ИЈРЃБ MODIFICAR PRODUCTO ­ЪћЃ");
            System.out.println("­Ъћи 4№ИЈРЃБ ELIMINAR PRODUCTO Рюќ№ИЈ");
            System.out.println("­Ъћи 5№ИЈРЃБ CALCULAR VENCIMIENTO ­Ъцб");
            System.out.println("­Ъћи 6№ИЈРЃБ SALIR DEL MEN├џ ­ЪџФ");
            System.out.print(ColoresConsola.TEXTO_AMARILLO + "\n ­ЪћХ Ingrese su opci├│n Рєњ ");

            opcionUsuario = ValidadorEntrada.leerByte(scanner);
            scanner.nextLine(); // Limpia el buffer

            if (DiccionarioProductos.isEmpty()) {banderaOpciones=false;}

            // Esta validaci├│n funciona para comprobar que el usuario haya escogido como primera opci├│n el n├║mero 1 o el 6

            if (opcionUsuario != 1 && opcionUsuario != 6 && !banderaOpciones) {
                System.out.println(ColoresConsola.TEXTO_ROJO + "№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их");
                System.out.println("\nРЮЌ­ЪЉђ A├▒ade alg├║n producto antes de poder ejecutar esta opci├│n | " + ColoresConsola.TEXTO_AMARILLO + " Selecciona la primera opci├│n 1№ИЈРЃБ");
                System.out.println(ColoresConsola.TEXTO_ROJO + "№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их№ИхРђ┐№ИхРђ┐№ИхРђ┐№Их" + ColoresConsola.TEXTO_AMARILLO);
                continue;
            } else banderaOpciones = true;


            switch (opcionUsuario) {
                case 1:
                    String respuesta = "";
                    while (!respuesta.equalsIgnoreCase("NO")) {

                        HashMap<String, Object> producto = new HashMap<>();

                        System.out.println(ColoresConsola.TEXTO_VERDE + "\n­ЪЊІ LISTA DE PRODUCTOS REGISTRADOS " + ColoresConsola.TEXTO_AMARILLO);

                        producto.put("ID", idAleatorio.toString());

                        System.out.print("­ЪЏЇ№ИЈ Nombre del producto: ");
                        String nombreProducto = scanner.nextLine();

                        System.out.print("­Ъњ░ Precio: ");
                        producto.put("precio", ValidadorEntrada.leerEntero(scanner));

                        System.out.print("­ЪЊд Cantidad en bodega: ");
                        producto.put("cantidad", ValidadorEntrada.leerEntero(scanner));

                        scanner.nextLine(); // Limpia el buffer

                        // Funci├│n para poder tener la fecha de vencimiento en el formato correcto
                        producto.put("vencimiento", ValidadorEntrada.leerFecha(scanner));

                        System.out.print("­ЪЊи URL De primera foto del producto: ");
                        producto.put("foto Uno", scanner.nextLine());

                        System.out.print("­ЪЊи URL De segunda foto del producto: ");
                        producto.put("foto Dos", scanner.nextLine());

                        System.out.print("­ЪЊј Descripci├│n del producto: ");
                        producto.put("descripcion", scanner.nextLine());

                        System.out.print("Рўб№ИЈ Categor├Гa del producto: ");
                        producto.put("categor├Гa", scanner.nextLine());

                        System.out.print("­ЪЈГ Nombre del Provedor: ");
                        producto.put("provedor", scanner.nextLine());

                        // Guardar en el mapa general
                        DiccionarioProductos.put(nombreProducto, producto);

                        System.out.print("\n┬┐Deseas agregar otro producto? (SI/NO) Рєњ ");
                        respuesta = scanner.nextLine();

                        while (!respuesta.trim().equalsIgnoreCase("SI")) {

                            if (respuesta.trim().equalsIgnoreCase("NO")) {
                                break;
                            } else {
                                System.out.print(ColoresConsola.TEXTO_ROJO + "РЮї Respuesta inv├Аlida | " + ColoresConsola.TEXTO_AMARILLO
                                        + "Deseas agregar otro producto? (SI/NO) Рєњ ");
                                respuesta = scanner.nextLine();
                            }
                        }
                    }
                    continue;
                case 2:
                    System.out.println(ColoresConsola.TEXTO_VERDE + "\n­ЪЊІ LISTA DE PRODUCTOS REGISTRADOS:");

                    // Map.Entry es la "p├Аgina" del diccionario en cuesti├│n
                    // .entrySet Retorna todas las entradas de la p├Аgina del diccionario
                    for (Map.Entry<String, HashMap<String, Object>> entrada : DiccionarioProductos.entrySet()) {
                        String nombreProducto = entrada.getKey();
                        HashMap<String, Object> datos = entrada.getValue();

                        System.out.println(ColoresConsola.TEXTO_CIAN +
                                "\nРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        System.out.println("­ЪЊд Nombre: " + nombreProducto);
                        System.out.println("­Ъєћ ID: " + datos.get("ID"));
                        System.out.println("­Ъњ░ Precio: $" + datos.get("precio"));
                        System.out.println("­ЪЊд Cantidad: " + datos.get("cantidad"));
                        System.out.println("­ЪЊЁ Vencimiento: " + datos.get("vencimiento"));
                        System.out.println("­Ъќ╝№ИЈ Foto 1: " + datos.get("foto Uno"));
                        System.out.println("­Ъќ╝№ИЈ Foto 2: " + datos.get("foto Dos"));
                        System.out.println("­ЪЊј Descripci├│n: " + datos.get("descripcion"));
                        System.out.println("­ЪЈи№ИЈ Categor├Гa: " + datos.get("categor├Гa"));
                        System.out.println("­ЪЈГ Proveedor: " + datos.get("provedor"));
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                    }
                    continue;
                case 3:
                    System.out.println(ColoresConsola.TEXTO_VERDE + "\n­ЪћЃ MODIFICAR PRECIO DE PRODUCTO\n");

                    for (Map.Entry<String, HashMap<String, Object>> entrada : DiccionarioProductos.entrySet()) {
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        String nombreProducto = entrada.getKey();
                        HashMap<String, Object> datos = entrada.getValue();
                        System.out.println("­ЪЊд " + nombreProducto + " - Precio actual: $" + datos.get("precio"));
                    }
                    System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                    // Solicitar el nombre del producto a modificar
                    System.out.print(ColoresConsola.TEXTO_AMARILLO + "\n­ЪЏЇ№ИЈ Ingrese el nombre exacto del producto a modificar Рєњ ");
                    String nombreProductoModificar = scanner.nextLine().trim();

                    // Verificar si el producto existe
                    while (true) {
                        if (!DiccionarioProductos.containsKey(nombreProductoModificar)) {
                            System.out.print(ColoresConsola.TEXTO_ROJO + "РЮї Producto no encontrado. Verifique que el nombre sea exacto Рєњ ");
                            nombreProductoModificar = scanner.nextLine().trim();
                            continue;
                        }
                        break;
                    }

                    // Obtener el producto a modificar
                    HashMap<String, Object> productoModificar = DiccionarioProductos.get(nombreProductoModificar);
                    int precioActual = (Integer) productoModificar.get("precio");

                    // Mostrar informaci├│n actual del producto
                    System.out.println(ColoresConsola.TEXTO_CIAN + "\n­ЪЊІ INFORMACI├ЊN ACTUAL DEL PRODUCTO:");
                    System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                    System.out.println("­ЪЊд Nombre: " + nombreProductoModificar);
                    System.out.println("­Ъњ░ Precio actual: $" + precioActual);
                    System.out.println("­ЪЊд Cantidad: " + productoModificar.get("cantidad"));
                    System.out.println("­ЪЊЁ Vencimiento: " + productoModificar.get("vencimiento"));
                    System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                    // Solicitar el nuevo precio
                    System.out.print(ColoresConsola.TEXTO_AMARILLO + "\n­Ъњ░ Ingrese el nuevo precio Рєњ $");
                    int nuevoPrecio = ValidadorEntrada.leerEntero(scanner);

                    // Validar que el precio sea positivo
                    if (nuevoPrecio <= 0) {
                        System.out.println(ColoresConsola.TEXTO_ROJO + "РЮї El precio debe ser mayor a 0. Operaci├│n cancelada.");
                        continue;
                    }

                    // Confirmar la modificaci├│n
                    scanner.nextLine(); // Limpiar buffer
                    System.out.print(ColoresConsola.TEXTO_AMARILLO + "\nРџа№ИЈ ┬┐Est├А seguro de cambiar el precio de $" + precioActual +
                            " a $" + nuevoPrecio + "? (SI/NO) Рєњ ");
                    String confirmacion = scanner.nextLine().trim();

                    if (confirmacion.equalsIgnoreCase("SI")) {
                        // Actualizar el precio
                        productoModificar.put("precio", nuevoPrecio);

                        System.out.println(ColoresConsola.TEXTO_VERDE + "\nРюЁ ┬АPRECIO MODIFICADO EXITOSAMENTE!");
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        System.out.println("­ЪЊд Producto: " + nombreProductoModificar);
                        System.out.println("­Ъњ░ Precio anterior: $" + precioActual);
                        System.out.println("­Ъњ░ Precio nuevo: $" + nuevoPrecio);
                        System.out.println("­ЪЊѕ Diferencia: $" + (nuevoPrecio - precioActual));
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                    } else if (confirmacion.equalsIgnoreCase("NO")) {
                        System.out.println(ColoresConsola.TEXTO_AMARILLO + "\n­ЪџФ Operaci├│n cancelada. El precio no fue modificado.");
                    } else {
                        System.out.println(ColoresConsola.TEXTO_ROJO + "РЮї Respuesta inv├Аlida. Operaci├│n cancelada.");
                    }

                    continue;
                case 4:
                    System.out.println(ColoresConsola.TEXTO_VERDE + "\nРЮј PRODUCTOS DISPONBILES PARA ELIMINAR");

                    for (Map.Entry<String, HashMap<String, Object>> entrada : DiccionarioProductos.entrySet()) {
                        String nombreProducto = entrada.getKey();
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        System.out.println("­ЪЊд " + nombreProducto);
                    }
                    System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                    // Solicitar el nombre del producto a modificar
                    System.out.print(ColoresConsola.TEXTO_AMARILLO + "\n­ЪЏЇ№ИЈ Ingrese el nombre exacto del producto que desea ELIMINAR Рєњ ");
                    String nombreProductoEliminar = scanner.nextLine().trim();

                    // Verificar si el producto existe
                    while (true) {
                        if (!DiccionarioProductos.containsKey(nombreProductoEliminar)) {
                            System.out.print(ColoresConsola.TEXTO_ROJO + "РЮї Producto no encontrado. Verifique que el nombre sea exacto Рєњ ");
                            nombreProductoEliminar = scanner.nextLine().trim();
                            continue;
                        }
                        break;
                    }

                    // Confirmar la modificaci├│n
                    System.out.print(ColoresConsola.TEXTO_AMARILLO + "\nРџа№ИЈ ┬┐Est├А seguro que quieres eliminar el producto" + nombreProductoEliminar + "? (SI/NO) Рєњ ");
                    String confirmacionEliminar = scanner.nextLine().trim();

                    if (confirmacionEliminar.equalsIgnoreCase("SI")) {
                        System.out.println(ColoresConsola.TEXTO_ROJO + "\nРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        System.out.println("РюќРЮј ┬АSE ELIMIN├Њ EL PRODUCTO " + nombreProductoEliminar + " EXITOSAMENTE !");
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                        DiccionarioProductos.remove(nombreProductoEliminar);

                        // Verificar si el diccionario qued├│ vac├Гo
                        if (DiccionarioProductos.isEmpty()) {
                            System.out.println(ColoresConsola.TEXTO_AMARILLO + "\n­ЪЊд La bodega est├А ahora vac├Гa.");
                            System.out.println("­ЪњА Puede agregar nuevos productos usando la opci├│n 1.");
                        } else {
                            // Mostrar productos restantes
                            System.out.println(ColoresConsola.TEXTO_CIAN + "\n­ЪЊІ PRODUCTOS RESTANTES EN BODEGA:");
                            for (String nombreRestante : DiccionarioProductos.keySet()) {
                                System.out.println("­ЪЊд " + nombreRestante);
                            }
                        }


                    } else if (confirmacionEliminar.equalsIgnoreCase("NO")) {
                        System.out.println(ColoresConsola.TEXTO_AMARILLO + "\n­ЪџФ Operaci├│n cancelada. El objeto no se elimin├│ el producto.");
                    } else {
                        System.out.println(ColoresConsola.TEXTO_ROJO + "РЮї Respuesta inv├Аlida. Operaci├│n cancelada.");
                    }

                    continue;
                case 5:
                    System.out.println(ColoresConsola.TEXTO_VERDE + "\n­ЪћЇ VERIFICAR ESTADO DE VENCIMIENTO DE PRODUCTOS");

                    // Mostrar productos disponibles para seleccionar
                    System.out.println(ColoresConsola.TEXTO_CIAN + "\n­ЪЊІ PRODUCTOS DISPONIBLES PARA VERIFICAR:");
                    System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                    int contador = 1;
                    List<String> nombresProductos = new ArrayList<>();

                    for (Map.Entry<String, HashMap<String, Object>> entrada : DiccionarioProductos.entrySet()) {
                        String nombreProducto = entrada.getKey();
                        HashMap<String, Object> datos = entrada.getValue();

                        nombresProductos.add(nombreProducto);

                        System.out.println(ColoresConsola.TEXTO_AMARILLO + contador + "№ИЈРЃБ " +
                                ColoresConsola.TEXTO_BLANCO + nombreProducto +
                                ColoresConsola.TEXTO_CIAN + " (Vence: " + datos.get("vencimiento") + ")");
                        contador++;
                    }


                    if (nombresProductos.size() == 1) {
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        System.out.print(ColoresConsola.TEXTO_AMARILLO + "\n­Ъћб Seleccione el n├║mero del producto a verificar (1)");
                    } else {
                        System.out.println("РћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");
                        System.out.print(ColoresConsola.TEXTO_AMARILLO + "\n­Ъћб Seleccione el n├║mero del producto a verificar (1-" +
                                nombresProductos.size() + ") Рєњ ");
                    }

                    try {
                        int seleccion = ValidadorEntrada.leerEntero(scanner);
                        scanner.nextLine(); // Limpiar buffer

                        // Validar que la selecci├│n est├Е en rango
                        if (seleccion < 1 || seleccion > nombresProductos.size()) {
                            System.out.println(ColoresConsola.TEXTO_ROJO +
                                    "РЮї Selecci├│n inv├Аlida. Debe estar entre 1 y " + nombresProductos.size());
                            continue;
                        }

                        // Obtener el producto seleccionado
                        String nombreSeleccionado = nombresProductos.get(seleccion - 1);
                        HashMap<String, Object> productoSeleccionado = DiccionarioProductos.get(nombreSeleccionado);

                        // Obtener datos del producto
                        LocalDate fechaVencimiento = (LocalDate) productoSeleccionado.get("vencimiento");
                        int cantidad = (int) productoSeleccionado.get("cantidad");
                        int precio = (int) productoSeleccionado.get("precio");

                        // Calcular d├Гas hasta/desde el vencimiento
                        LocalDate hoy = LocalDate.now();
                        long diasDiferencia = ChronoUnit.DAYS.between(hoy, fechaVencimiento);

                        // Mostrar informaci├│n detallada del producto
                        System.out.println(ColoresConsola.TEXTO_CIAN + "\n" +
                                "РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ");
                        System.out.println("РЋЉ                           ­ЪЊі REPORTE DE VENCIMIENTO                          РЋЉ");
                        System.out.println("РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ");

                        System.out.println(ColoresConsola.TEXTO_BLANCO + "\n­ЪЊд Producto: " + ColoresConsola.TEXTO_AMARILLO + nombreSeleccionado);
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­ЪЊЁ Fecha actual: " + ColoresConsola.TEXTO_CIAN + hoy);
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­ЪЊЁ Fecha de vencimiento: " + ColoresConsola.TEXTO_CIAN + fechaVencimiento);
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­ЪЊд Cantidad en stock: " + ColoresConsola.TEXTO_CIAN + cantidad + " unidades");
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­Ъњ░ Precio unitario: " + ColoresConsola.TEXTO_CIAN + "$" + precio);

                        // An├Аlisis del estado de vencimiento
                        System.out.println(ColoresConsola.TEXTO_CIAN + "\n" +
                                "РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ");
                        System.out.println("РЋЉ                            ­ЪћЇ AN├ЂLISIS DE ESTADO                             РЋЉ");
                        System.out.println("РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ");

                        if (diasDiferencia > 0) {
                            // Producto NO vencido
                            if (diasDiferencia <= 3) {
                                // Pr├│ximo a vencer (1-3 d├Гas)
                                System.out.println(ColoresConsola.TEXTO_AMARILLO + "\nРџа№ИЈ  ESTADO: PR├ЊXIMO A VENCER Рџа№ИЈ");
                                System.out.println("­ЪЋњ D├Гas restantes: " + diasDiferencia + " d├Гa(s)");
                                System.out.println("­ЪњА RECOMENDACI├ЊN: ┬АVENDER URGENTEMENTE! Aplicar descuentos o promociones");

                                // Calcular p├Еrdida potencial
                                int perdidaPotencial = cantidad * precio;
                                System.out.println("­ЪњИ P├Еrdida potencial si vence: $" + perdidaPotencial);

                                // Sugerencias espec├Гficas por d├Гas
                                if (diasDiferencia == 1) {
                                    System.out.println("­Ъџе ALERTA CR├ЇTICA: ┬АSolo queda 1 d├Гa! Descuento del 50% recomendado");
                                } else if (diasDiferencia == 2) {
                                    System.out.println("РџА ALERTA ALTA: Quedan 2 d├Гas. Descuento del 30% recomendado");
                                } else {
                                    System.out.println("Рџа№ИЈ ALERTA MEDIA: Quedan 3 d├Гas. Descuento del 15% recomendado");
                                }

                            } else if (diasDiferencia <= 7) {
                                // Pr├│ximo a vencer (4-7 d├Гas)
                                System.out.println(ColoresConsola.TEXTO_CIAN + "\n­ЪЊІ ESTADO: EN SEGUIMIENTO ­ЪЊІ");
                                System.out.println("­ЪЋњ D├Гas restantes: " + diasDiferencia + " d├Гa(s)");
                                System.out.println("­ЪњА RECOMENDACI├ЊN: Monitorear semanalmente. Preparar estrategia de venta");

                            } else if (diasDiferencia <= 30) {
                                // Fecha normal (m├Аs de 7 d├Гas)
                                System.out.println(ColoresConsola.TEXTO_VERDE + "\nРюЁ ESTADO: BUENO РюЁ");
                                System.out.println("­ЪЋњ D├Гas restantes: " + diasDiferencia + " d├Гa(s)");
                                System.out.println("­ЪњА RECOMENDACI├ЊN: Producto en condiciones normales para la venta");

                            } else {
                                // Muy fresco (m├Аs de 30 d├Гas)
                                System.out.println(ColoresConsola.TEXTO_VERDE + "\n­ЪїЪ ESTADO: EXCELENTE ­ЪїЪ");
                                System.out.println("­ЪЋњ D├Гas restantes: " + diasDiferencia + " d├Гa(s)");
                                System.out.println("­ЪњА RECOMENDACI├ЊN: ┬АProducto muy fresco! Ideal para venta normal");
                            }

                        } else if (diasDiferencia == 0) {
                            // Vence hoy
                            System.out.println(ColoresConsola.TEXTO_ROJO + "\n­Ъџе ESTADO: VENCE HOY ­Ъџе");
                            System.out.println("РЈ░ ┬А├џLTIMO D├ЇA DE VENTA!");
                            System.out.println("­ЪњА RECOMENDACI├ЊN: Vender inmediatamente con descuento del 70%");
                            System.out.println("­Ъћё ACCI├ЊN REQUERIDA: Revisar al final del d├Гa para descarte");

                        } else {
                            // Producto vencido
                            long diasVencido = Math.abs(diasDiferencia);
                            System.out.println(ColoresConsola.TEXTO_ROJO + "\n­Ъњђ ESTADO: PRODUCTO VENCIDO ­Ъњђ");
                            System.out.println("РЈ░ D├Гas vencido: " + diasVencido + " d├Гa(s)");

                            if (diasVencido <= 3) {
                                System.out.println("Рџа№ИЈ ACCI├ЊN: Producto recientemente vencido");
                                System.out.println("­ЪћЇ RECOMENDACI├ЊN: Evaluar si es apto para consumo seg├║n tipo de producto");
                                System.out.println("­ЪЊъ SUGERENCIA: Contactar proveedor para posible devoluci├│n");
                            } else {
                                System.out.println("­ЪЌЉ№ИЈ ACCI├ЊN REQUERIDA: ELIMINAR INMEDIATAMENTE DEL INVENTARIO");
                                System.out.println("Рџа№ИЈ RIESGO: Producto no apto para venta ni consumo");
                                System.out.println("­ЪњИ P├Еrdida confirmada: $" + (cantidad * precio));

                                // Preguntar si desea eliminar autom├Аticamente
                                System.out.print(ColoresConsola.TEXTO_AMARILLO +
                                        "\n­ЪЌЉ№ИЈ ┬┐Desea eliminar el Stock de este producto vencido del inventario? (SI/NO) Рєњ ");
                                String respuestaEliminar = scanner.nextLine().trim();

                                if (respuestaEliminar.equalsIgnoreCase("SI")) {
                                    productoSeleccionado.put("cantidad", 0);
                                    System.out.println(ColoresConsola.TEXTO_VERDE +
                                            "РюЁ Stock eliminado exitosamente del inventario");
                                } else {
                                    System.out.println(ColoresConsola.TEXTO_AMARILLO +
                                            "Рџа№ИЈ El Stock no fue eliminado (RIESGO ALTO)");
                                }
                            }
                        }

                        // Informaci├│n adicional ├║til
                        System.out.println(ColoresConsola.TEXTO_CIAN + "\n" +
                                "РЋћРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЌ");
                        System.out.println("РЋЉ                          ­ЪЊі INFORMACI├ЊN ADICIONAL                            РЋЉ");
                        System.out.println("РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ");

                        // Mostrar informaci├│n del proveedor y categor├Гa
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­ЪЈГ Proveedor: " +
                                ColoresConsola.TEXTO_CIAN + productoSeleccionado.get("provedor"));
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­ЪЈи№ИЈ Categor├Гa: " +
                                ColoresConsola.TEXTO_CIAN + productoSeleccionado.get("categor├Гa"));
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­Ъєћ ID del producto: " +
                                ColoresConsola.TEXTO_CIAN + productoSeleccionado.get("ID"));

                        // Calcular valor total del stock
                        int valorTotalStock = cantidad * precio;
                        System.out.println(ColoresConsola.TEXTO_BLANCO + "­Ъњ░ Valor total del stock: " +
                                ColoresConsola.TEXTO_AMARILLO + "$" + valorTotalStock);

                        // Mostrar sem├Аforo visual del estado
                        System.out.println(ColoresConsola.TEXTO_CIAN + "\n­ЪЊі SEM├ЂFORO DE ESTADO:");
                        if (diasDiferencia > 7) {
                            System.out.println("­ЪЪб­ЪЪб­ЪЪб VERDE: Producto en excelente estado");
                        } else if (diasDiferencia > 3) {
                            System.out.println("­ЪЪА­ЪЪА­ЪЪА AMARILLO: Requiere atenci├│n");
                        } else if (diasDiferencia >= 0) {
                            System.out.println("­ЪЪа­ЪЪа­ЪЪа NARANJA: Acci├│n inmediata requerida");
                        } else if (diasDiferencia <= -3) {
                            System.out.println("­Ъћ┤­Ъћ┤­Ъћ┤ ROJO: Producto vencido - Alto riesgo");
                        }

                        System.out.println(ColoresConsola.TEXTO_CIAN +
                                "\nРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂРћЂ");

                        // Opci├│n para verificar otro producto
                        System.out.print(ColoresConsola.TEXTO_AMARILLO +
                                "\n­Ъћё ┬┐Desea verificar otro producto? (SI/NO) Рєњ ");
                        String verificarOtro = scanner.nextLine().trim();

                        if (verificarOtro.equalsIgnoreCase("SI")) {
                            // Reiniciar el case 5 recursivamente
                            System.out.println("\n" + "=".repeat(80));
                            // Aqu├Г se volver├Гa a ejecutar el case 5, pero para evitar recursi├│n infinita,
                            // simplemente mostramos un mensaje
                            System.out.println(ColoresConsola.TEXTO_VERDE +
                                    "­ЪњА Regrese al men├║ principal y seleccione la opci├│n 5 nuevamente");
                        }

                    } catch (Exception e) {
                        System.out.println(ColoresConsola.TEXTO_ROJO +
                                "РЮї Error al procesar la verificaci├│n: " + e.getMessage());
                        System.out.println("­ЪњА Intente nuevamente con una selecci├│n v├Аlida");
                    }

                    continue;
                case 6:
                    System.out.println("\n Gracias por utilizar el programa ­ЪЉЇ");
                    break;
                default:
                    System.out.println("Opci├│n Inv├Аlida Рюќ  Ingrese un d├Гgito del 1 al 6№ИЈ");
                    // Esto Tiene impl├Гcito un Continue
            }
            break;
        }
    }
}
